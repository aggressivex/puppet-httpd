<%

def recursive_merge(a, h)
    a.merge!(h) {|key, _old, _new| if _old.class == Hash then recursive_merge(_old, _new) else _new end}
end

conf_vhost_final = recursive_merge(conf_vhost_default, conf_vhost_override)

%>#
# This file has been generated automatically by Aggressivex/puppet-httpd
# Issue [No logical order] As ruby doesn't keep order in hashes, to avoid 
# randomness hash is sort
#
NameVirtualHost <%= ip %>:<%= port %>
<VirtualHost <%= ip %>:<%= port %>>
<% conf_vhost_final.sort.each do |key, value| -%>
    <% if value.is_a? String -%><%= key %> <%= value %>
<% end -%>
    <% if value.is_a? Hash -%>
    <<%= key %>>
    <% value.sort.each do |k2, v2| -%>
        <% if v2.is_a? String -%><%= k2 %> <%= v2 %>
    <% end -%>
    <% end -%>
    </<%= key.split(/ /)[0] -%>>
    <% end -%>
    <% if value.is_a? Array -%>
    <% value.each do |k3, v3| -%>
    <%= key %> <%= k3 %> <%= v3 %>
    <% end -%>
    <% end -%>
    <% end -%>    
</VirtualHost>